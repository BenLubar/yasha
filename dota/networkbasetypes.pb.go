// Code generated by protoc-gen-gogo.
// source: networkbasetypes.proto
// DO NOT EDIT!

package dota

import proto "code.google.com/p/gogoprotobuf/proto"
import json "encoding/json"
import math "math"

// discarding unused import google_protobuf "github.com/dotabuff/yasha/dota/google/protobuf/descriptor.pb"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type SIGNONSTATE int32

const (
	SIGNONSTATE_SIGNONSTATE_NONE        SIGNONSTATE = 0
	SIGNONSTATE_SIGNONSTATE_CHALLENGE   SIGNONSTATE = 1
	SIGNONSTATE_SIGNONSTATE_CONNECTED   SIGNONSTATE = 2
	SIGNONSTATE_SIGNONSTATE_NEW         SIGNONSTATE = 3
	SIGNONSTATE_SIGNONSTATE_PRESPAWN    SIGNONSTATE = 4
	SIGNONSTATE_SIGNONSTATE_SPAWN       SIGNONSTATE = 5
	SIGNONSTATE_SIGNONSTATE_FULL        SIGNONSTATE = 6
	SIGNONSTATE_SIGNONSTATE_CHANGELEVEL SIGNONSTATE = 7
)

var SIGNONSTATE_name = map[int32]string{
	0: "SIGNONSTATE_NONE",
	1: "SIGNONSTATE_CHALLENGE",
	2: "SIGNONSTATE_CONNECTED",
	3: "SIGNONSTATE_NEW",
	4: "SIGNONSTATE_PRESPAWN",
	5: "SIGNONSTATE_SPAWN",
	6: "SIGNONSTATE_FULL",
	7: "SIGNONSTATE_CHANGELEVEL",
}
var SIGNONSTATE_value = map[string]int32{
	"SIGNONSTATE_NONE":        0,
	"SIGNONSTATE_CHALLENGE":   1,
	"SIGNONSTATE_CONNECTED":   2,
	"SIGNONSTATE_NEW":         3,
	"SIGNONSTATE_PRESPAWN":    4,
	"SIGNONSTATE_SPAWN":       5,
	"SIGNONSTATE_FULL":        6,
	"SIGNONSTATE_CHANGELEVEL": 7,
}

func (x SIGNONSTATE) Enum() *SIGNONSTATE {
	p := new(SIGNONSTATE)
	*p = x
	return p
}
func (x SIGNONSTATE) String() string {
	return proto.EnumName(SIGNONSTATE_name, int32(x))
}
func (x *SIGNONSTATE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SIGNONSTATE_value, data, "SIGNONSTATE")
	if err != nil {
		return err
	}
	*x = SIGNONSTATE(value)
	return nil
}

type CMsgVector struct {
	X                *float32 `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
	Y                *float32 `protobuf:"fixed32,2,opt,name=y" json:"y,omitempty"`
	Z                *float32 `protobuf:"fixed32,3,opt,name=z" json:"z,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgVector) Reset()         { *m = CMsgVector{} }
func (m *CMsgVector) String() string { return proto.CompactTextString(m) }
func (*CMsgVector) ProtoMessage()    {}

func (m *CMsgVector) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CMsgVector) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *CMsgVector) GetZ() float32 {
	if m != nil && m.Z != nil {
		return *m.Z
	}
	return 0
}

type CMsgVector2D struct {
	X                *float32 `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
	Y                *float32 `protobuf:"fixed32,2,opt,name=y" json:"y,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgVector2D) Reset()         { *m = CMsgVector2D{} }
func (m *CMsgVector2D) String() string { return proto.CompactTextString(m) }
func (*CMsgVector2D) ProtoMessage()    {}

func (m *CMsgVector2D) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CMsgVector2D) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

type CMsgQAngle struct {
	X                *float32 `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
	Y                *float32 `protobuf:"fixed32,2,opt,name=y" json:"y,omitempty"`
	Z                *float32 `protobuf:"fixed32,3,opt,name=z" json:"z,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgQAngle) Reset()         { *m = CMsgQAngle{} }
func (m *CMsgQAngle) String() string { return proto.CompactTextString(m) }
func (*CMsgQAngle) ProtoMessage()    {}

func (m *CMsgQAngle) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CMsgQAngle) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *CMsgQAngle) GetZ() float32 {
	if m != nil && m.Z != nil {
		return *m.Z
	}
	return 0
}

type CSVCMsg_GameEvent struct {
	EventName        *string                  `protobuf:"bytes,1,opt,name=event_name" json:"event_name,omitempty"`
	Eventid          *int32                   `protobuf:"varint,2,opt,name=eventid" json:"eventid,omitempty"`
	Keys             []*CSVCMsg_GameEventKeyT `protobuf:"bytes,3,rep,name=keys" json:"keys,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *CSVCMsg_GameEvent) Reset()         { *m = CSVCMsg_GameEvent{} }
func (m *CSVCMsg_GameEvent) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_GameEvent) ProtoMessage()    {}

func (m *CSVCMsg_GameEvent) GetEventName() string {
	if m != nil && m.EventName != nil {
		return *m.EventName
	}
	return ""
}

func (m *CSVCMsg_GameEvent) GetEventid() int32 {
	if m != nil && m.Eventid != nil {
		return *m.Eventid
	}
	return 0
}

func (m *CSVCMsg_GameEvent) GetKeys() []*CSVCMsg_GameEventKeyT {
	if m != nil {
		return m.Keys
	}
	return nil
}

type CSVCMsg_GameEventKeyT struct {
	Type             *int32   `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	ValString        *string  `protobuf:"bytes,2,opt,name=val_string" json:"val_string,omitempty"`
	ValFloat         *float32 `protobuf:"fixed32,3,opt,name=val_float" json:"val_float,omitempty"`
	ValLong          *int32   `protobuf:"varint,4,opt,name=val_long" json:"val_long,omitempty"`
	ValShort         *int32   `protobuf:"varint,5,opt,name=val_short" json:"val_short,omitempty"`
	ValByte          *int32   `protobuf:"varint,6,opt,name=val_byte" json:"val_byte,omitempty"`
	ValBool          *bool    `protobuf:"varint,7,opt,name=val_bool" json:"val_bool,omitempty"`
	ValUint64        *uint64  `protobuf:"varint,8,opt,name=val_uint64" json:"val_uint64,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CSVCMsg_GameEventKeyT) Reset()         { *m = CSVCMsg_GameEventKeyT{} }
func (m *CSVCMsg_GameEventKeyT) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_GameEventKeyT) ProtoMessage()    {}

func (m *CSVCMsg_GameEventKeyT) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CSVCMsg_GameEventKeyT) GetValString() string {
	if m != nil && m.ValString != nil {
		return *m.ValString
	}
	return ""
}

func (m *CSVCMsg_GameEventKeyT) GetValFloat() float32 {
	if m != nil && m.ValFloat != nil {
		return *m.ValFloat
	}
	return 0
}

func (m *CSVCMsg_GameEventKeyT) GetValLong() int32 {
	if m != nil && m.ValLong != nil {
		return *m.ValLong
	}
	return 0
}

func (m *CSVCMsg_GameEventKeyT) GetValShort() int32 {
	if m != nil && m.ValShort != nil {
		return *m.ValShort
	}
	return 0
}

func (m *CSVCMsg_GameEventKeyT) GetValByte() int32 {
	if m != nil && m.ValByte != nil {
		return *m.ValByte
	}
	return 0
}

func (m *CSVCMsg_GameEventKeyT) GetValBool() bool {
	if m != nil && m.ValBool != nil {
		return *m.ValBool
	}
	return false
}

func (m *CSVCMsg_GameEventKeyT) GetValUint64() uint64 {
	if m != nil && m.ValUint64 != nil {
		return *m.ValUint64
	}
	return 0
}

type CSVCMsgList_GameEvents struct {
	Events           []*CSVCMsgList_GameEventsEventT `protobuf:"bytes,1,rep,name=events" json:"events,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *CSVCMsgList_GameEvents) Reset()         { *m = CSVCMsgList_GameEvents{} }
func (m *CSVCMsgList_GameEvents) String() string { return proto.CompactTextString(m) }
func (*CSVCMsgList_GameEvents) ProtoMessage()    {}

func (m *CSVCMsgList_GameEvents) GetEvents() []*CSVCMsgList_GameEventsEventT {
	if m != nil {
		return m.Events
	}
	return nil
}

type CSVCMsgList_GameEventsEventT struct {
	Tick             *int32             `protobuf:"varint,1,opt,name=tick" json:"tick,omitempty"`
	Event            *CSVCMsg_GameEvent `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CSVCMsgList_GameEventsEventT) Reset()         { *m = CSVCMsgList_GameEventsEventT{} }
func (m *CSVCMsgList_GameEventsEventT) String() string { return proto.CompactTextString(m) }
func (*CSVCMsgList_GameEventsEventT) ProtoMessage()    {}

func (m *CSVCMsgList_GameEventsEventT) GetTick() int32 {
	if m != nil && m.Tick != nil {
		return *m.Tick
	}
	return 0
}

func (m *CSVCMsgList_GameEventsEventT) GetEvent() *CSVCMsg_GameEvent {
	if m != nil {
		return m.Event
	}
	return nil
}

type CSVCMsg_UserMessage struct {
	MsgType          *int32 `protobuf:"varint,1,opt,name=msg_type" json:"msg_type,omitempty"`
	MsgData          []byte `protobuf:"bytes,2,opt,name=msg_data" json:"msg_data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_UserMessage) Reset()         { *m = CSVCMsg_UserMessage{} }
func (m *CSVCMsg_UserMessage) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_UserMessage) ProtoMessage()    {}

func (m *CSVCMsg_UserMessage) GetMsgType() int32 {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return 0
}

func (m *CSVCMsg_UserMessage) GetMsgData() []byte {
	if m != nil {
		return m.MsgData
	}
	return nil
}

type CSVCMsgList_UserMessages struct {
	Usermsgs         []*CSVCMsgList_UserMessagesUsermsgT `protobuf:"bytes,1,rep,name=usermsgs" json:"usermsgs,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *CSVCMsgList_UserMessages) Reset()         { *m = CSVCMsgList_UserMessages{} }
func (m *CSVCMsgList_UserMessages) String() string { return proto.CompactTextString(m) }
func (*CSVCMsgList_UserMessages) ProtoMessage()    {}

func (m *CSVCMsgList_UserMessages) GetUsermsgs() []*CSVCMsgList_UserMessagesUsermsgT {
	if m != nil {
		return m.Usermsgs
	}
	return nil
}

type CSVCMsgList_UserMessagesUsermsgT struct {
	Tick             *int32               `protobuf:"varint,1,opt,name=tick" json:"tick,omitempty"`
	Msg              *CSVCMsg_UserMessage `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CSVCMsgList_UserMessagesUsermsgT) Reset()         { *m = CSVCMsgList_UserMessagesUsermsgT{} }
func (m *CSVCMsgList_UserMessagesUsermsgT) String() string { return proto.CompactTextString(m) }
func (*CSVCMsgList_UserMessagesUsermsgT) ProtoMessage()    {}

func (m *CSVCMsgList_UserMessagesUsermsgT) GetTick() int32 {
	if m != nil && m.Tick != nil {
		return *m.Tick
	}
	return 0
}

func (m *CSVCMsgList_UserMessagesUsermsgT) GetMsg() *CSVCMsg_UserMessage {
	if m != nil {
		return m.Msg
	}
	return nil
}

func init() {
	proto.RegisterEnum("dota.SIGNONSTATE", SIGNONSTATE_name, SIGNONSTATE_value)
}
